version: '3.5'

services:
  # Production configuration
  wordpress:
    depends_on:
      - mysql
    container_name: ${DOMAIN}-wordpress
    image: wordpress
    restart: unless-stopped
    volumes:
      - ${VOLUME_PATH}/${DOMAIN}/wordpress:/var/www/html
      - ./config/wordpress/uploadsize.ini:/usr/local/etc/php/conf.d/uploadsize.ini
    environment:
      WORDPRESS_DB_HOST: ${DOMAIN}-mysql:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_TABLE_PREFIX: ${WP_TABLE_PREFIX}
      VIRTUAL_HOST: ${DOMAIN},${HOSTNAMES}
      LETSENCRYPT_HOST: ${DOMAIN},${HOSTNAMES}
      LETSENCRYPT_EMAIL: ${EMAIL}
      WP_ENV: ${WP_ENV}
    logging:
      options:
        max-size: ${LOGGING_OPTIONS_MAX_SIZE:-200k}
    ports:
      - "${IP:-0.0.0.0}:${WP_PORT}:80"

  mysql:
    image: mariadb
    container_name: ${DOMAIN}-mysql
    restart: unless-stopped
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"

  # Staging configuration
  wordpress-staging:
    depends_on:
      - mysql-staging
    container_name: staging.${DOMAIN}-wordpress
    image: wordpress
    restart: unless-stopped
    volumes:
      - ${VOLUME_PATH}/staging.${DOMAIN}/wordpress:/var/www/html
      - ./config/wordpress/uploadsize.ini:/usr/local/etc/php/conf.d/uploadsize.ini
    environment:
      WORDPRESS_DB_HOST: staging.${DOMAIN}-mysql:3306
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_TABLE_PREFIX: ${WP_TABLE_PREFIX}
      VIRTUAL_HOST: staging.${DOMAIN}
      LETSENCRYPT_HOST: staging.${DOMAIN}
      LETSENCRYPT_EMAIL: ${EMAIL}
      WP_ENV: ${WP_STAGING_ENV}
    logging:
      options:
        max-size: ${LOGGING_OPTIONS_MAX_SIZE:-200k}
    ports:
      - "${IP:-0.0.0.0}:${WP_STAGING_PORT}:80"

  mysql-staging:
    image: mariadb
    container_name: staging.${DOMAIN}-mysql
    restart: unless-stopped
    volumes:
      - mysql-staging:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_STAGING_PORT}:3306"

  # Web proxy configuration
  nginx:
    image: nginx
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: ${DOMAIN}-nginx
    restart: always
    ports:
      - "${IP:-0.0.0.0}:80:80"
      - "${IP:-0.0.0.0}:443:443"
    volumes:
      - ${VOLUME_PATH}/${DOMAIN}/nginx/conf.d:/etc/nginx/conf.d
      - ${VOLUME_PATH}/${DOMAIN}/nginx/vhost.d:/etc/nginx/vhost.d
      - ${VOLUME_PATH}/${DOMAIN}/nginx/html:/usr/share/nginx/html
      - ${VOLUME_PATH}/${DOMAIN}/nginx/certs:/etc/nginx/certs:ro
      - ${VOLUME_PATH}/${DOMAIN}/nginx/htpasswd:/etc/nginx/htpasswd:ro
    logging:
      driver: ${NGINX_LOG_DRIVER:-json-file}
      options:
        max-size: ${NGINX_LOG_MAX_SIZE:-4m}
        max-file: ${NGINX_LOG_MAX_FILE:-10}

  docker-gen:
    image: jwilder/docker-gen:0.7.3
    command: -notify-sighup ${DOMAIN}-nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: ${DOMAIN}-docker-gen
    restart: always
    volumes:
      - ${VOLUME_PATH}/${DOMAIN}/nginx/conf.d:/etc/nginx/conf.d
      - ${VOLUME_PATH}/${DOMAIN}/nginx/vhost.d:/etc/nginx/vhost.d
      - ${VOLUME_PATH}/${DOMAIN}/nginx/html:/usr/share/nginx/html
      - ${VOLUME_PATH}/${DOMAIN}/nginx/certs:/etc/nginx/certs:ro
      - ${VOLUME_PATH}/${DOMAIN}/nginx/htpasswd:/etc/nginx/htpasswd:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./config/docker-gen/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    logging:
      driver: ${DOCKER_GEN_LOG_DRIVER:-json-file}
      options:
        max-size: ${DOCKER_GEN_LOG_MAX_SIZE:-2m}
        max-file: ${DOCKER_GEN_LOG_MAX_FILE:-10}

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.9.1
    container_name: ${DOMAIN}-letsencrypt
    restart: always
    volumes:
      - ${VOLUME_PATH}/${DOMAIN}/nginx/conf.d:/etc/nginx/conf.d
      - ${VOLUME_PATH}/${DOMAIN}/nginx/vhost.d:/etc/nginx/vhost.d
      - ${VOLUME_PATH}/${DOMAIN}/nginx/html:/usr/share/nginx/html
      - ${VOLUME_PATH}/${DOMAIN}/nginx/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: ${DOMAIN}-docker-gen
      NGINX_PROXY_CONTAINER: ${DOMAIN}-nginx
    logging:
      driver: ${LETSENCRYPT_LOG_DRIVER:-json-file}
      options:
        max-size: ${LETSENCRYPT_LOG_MAX_SIZE:-2m}
        max-file: ${LETSENCRYPT_LOG_MAX_FILE:-10}

volumes:
  mysql:
    name: ${DOMAIN}
  mysql-staging:
    name: staging.${DOMAIN}
